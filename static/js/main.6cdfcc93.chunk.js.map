{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0QAkCeA,MA9Bf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC1C,OACA,sBAAKC,UAAY,QAAjB,UACI,qBAAKC,IAAOH,EAAQI,IAAON,EAAOA,MAASA,IAC3C,sBAAKI,UAAY,cAAjB,UACI,oBAAIA,UAAY,eAAhB,SAAgCJ,IAChC,oBAAII,UAAY,cAAhB,SAA+BL,IAC/B,oBAAIK,UAAY,gBAAhB,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAChB,oBAAkBL,UAAU,gBAA5B,SACKI,GADMC,QAKX,mBAAGL,UAAY,iBAAf,SAAiCH,EAAQS,MAAM,EAAE,cC+B9CC,E,4MA3CbC,MAAQ,CACNC,WAAa,EACbC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGAJ,EAHA,EAERK,KACEA,KAAML,OAGV,EAAKM,SAAS,CAACN,SAAQD,WAAU,IANvB,2C,uDAQZ,WACEQ,KAAKN,c,oBAEP,WAAS,IAAD,EACwBM,KAAKT,MAA3BC,EADF,EACEA,UAAWC,EADb,EACaA,OACnB,OACE,yBAASV,UAAY,YAArB,SACGS,EACD,qBAAKT,UAAY,SAAjB,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAY,SAAjB,SACGU,EAAOP,KAAI,SAAAe,GAAK,OAClB,cAAC,EAAD,CACCC,GAAMD,EAAMC,GACZxB,KAAQuB,EAAMvB,KACdC,MAASsB,EAAMtB,MACfC,QAAWqB,EAAMrB,QACjBC,OAAUoB,EAAME,mBAChBrB,OAAUmB,EAAMnB,oB,GAjCRsB,IAAMC,WCAxBC,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.6cdfcc93.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}) {\r\n    return ( \r\n    <div className = \"movie\">\r\n        <img src = {poster} alt = {title} title = {title}/>\r\n        <div className = \"movie__data\">\r\n            <h3 className = \"movie__title\">{title}</h3>\r\n            <h5 className = \"movie__year\">{year}</h5>\r\n            <ul className = \"movie__genres\">\r\n                {genres.map((genre, index) =>(\r\n            <li key = {index} className=\"genres__genre\">\r\n                {genre}\r\n            </li>\r\n            ))}\r\n            </ul>\r\n            <p className = \"movie__summary\">{summary.slice(0,140)}</p>\r\n            \r\n        </div>\r\n    </div>\r\n    );    \r\n}\r\n\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./Movie.css\";\n\nclass App extends React.Component{\n  state = {\n    isLoading :  true,\n    movies: []\n  };\n  getMovies = async() => {\n    const {\n      data:{\n        data:{movies}\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\")\n    this.setState({movies, isLoading:false})\n  };\n  componentDidMount(){\n    this.getMovies();\n  }\n  render(){\n    const { isLoading, movies } = this.state;\n    return (\n      <section className = \"container\">\n        {isLoading ? ( \n        <div className = \"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div> \n        ): (\n        <div className = \"movies\">\n          {movies.map(movie =>(\n         <Movie \n          id = {movie.id} \n          year = {movie.year} \n          title = {movie.title} \n          summary = {movie.summary} \n          poster = {movie.medium_cover_image}\n          genres = {movie.genres}\n         />  \n        ))}\n        </div>\n        )}\n    </section>\n    );\n   }\n  }\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}